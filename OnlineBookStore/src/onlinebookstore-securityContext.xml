<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"/>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple reaonlinebookstore, use the 'reaonlinebookstore' property 
			instead. -->
		<property name="realm" ref="databaseRealm" />
		<property name="cacheManager" ref="ehCacheManager" />
		<!-- By default the servlet container sessions will be used. Uncomment 
			this line to use shiro's native sessions (see the JavaDoc for more): -->
		<!-- <property name="sessionMode" value="native" /> -->
	</bean>

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- security datasource: Text -->
	<bean id="textConfigRealm" class="org.apache.shiro.realm.text.PropertiesRealm">
		<property name="resourcePath">
			<value>classpath:shiro.properties</value>
		</property>
	</bean>
		
	<!-- security datasource: JDBC -->  
	<bean id="databaseRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
		<property name="dataSource" ref="dataSource"/>
		<!-- <property name="authenticationQuery" value="select password CONCAT('${shiro.applicationSalt}', ':', salt) as salt from shiro_user where userid = ?"/> -->
		 <property name="authenticationQuery" value="SELECT password FROM shiro_users1 WHERE username = ?"/>
		<!-- <property name="userRolesQuery" value="SELECT name FROM shiro_role LEFT JOIN shiro_user_role ON shiro_role.id = shiro_user_role.role_id LEFT JOIN shiro_user ON shiro_user_role.user_id = shiro_user.id WHERE userid = ?"/>
		<property name="permissionsQuery" value="SELECT permission FROM shiro_role_permission LEFT JOIN shiro_role ON shiro_role_permission.role_id = shiro_role.id WHERE shiro_role.name = ?"/>
		<property name="permissionsLookupEnabled" value="true"/>
		<property name="saltStyle" value="COLUMN"/>
		<property name="credentialsMatcher" ref="sha512Matcher"/> -->
	</bean>

	<bean id="sha512Matcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<!-- Modifying any piece of the matcher will likely invalidate the ability to match any passphrases in the DB -->
		<property name="hashAlgorithmName" value="${shiro.hashAlgorithmName}" />
		<property name="storedCredentialsHexEncoded" value="${shiro.storedCredentialsHexEncoded}" />
		<property name="hashIterations" value="${shiro.hashIterations}" />
	</bean>
</beans>